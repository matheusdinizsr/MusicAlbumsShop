@page "/bands/addband/{BandId:int?}"
@using MusicAlbumsShop.Shared.DTOs
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer
@attribute [StreamRendering]

<h3> MUDAR AQUI Band</h3>
<AlertMessage Message="@_message"></AlertMessage>

<section>
    <EditForm Model=@bandModel>

        <DataAnnotationsValidator />
        <ValidationSummary/>
        <div class="row mt-2">
            <label class="text-muted">Name</label>
            <InputText class="form-control" @bind-Value=bandModel.Name />

        </div>

        <div class="row mt-2">
            <label class="text-muted">Origin</label>
            <InputText class="form-control" @bind-Value=bandModel.Origin/>
        </div>

        <div class="row mt-2">
            <label class="text-muted">Years Active</label>
            <InputText class="form-control" @bind-Value=bandModel.YearsActive />
        </div>

        <div class="row mt-2">
            <label class="text-muted">Genre</label>
            <InputSelect class="form-select" @bind-Value=bandModel.GenreId>
                @foreach (var g in _genresAndIds)
                {
                    <option value="@g.GenreId">@g.Name</option>
                }
            </InputSelect>
        </div>

        <button class="btn btn-primary mt-3" @onclick="SaveBand">Save</button>
    </EditForm>
</section>


@code {
    protected override async Task OnInitializedAsync()
    {
        _genresAndIds = await _apiClientService.GetGenres();

        if (BandId != null)
        {
            var band = await _apiClientService.GetBandDetails((int)BandId);
            bandModel.Name = band.Name;
            bandModel.Origin = band.Origin;
            bandModel.YearsActive = band.YearsActive;
            bandModel.GenreId = band.GenreId;
        }
        else
        {
            bandModel.GenreId = _genresAndIds[0].GenreId;
        }
    }

    [Parameter]
    public int? BandId { get; set; }

    BandDetails bandModel = new();

    private ApiClientService _apiClientService = new ApiClientService();
    private GenreWithTitle[] _genresAndIds = new GenreWithTitle[] { };
    string _message = "";


    public async Task SaveBand()
    {
        await _apiClientService.AddOrUpdateBandAsync(BandId, bandModel.Name, bandModel.Origin, bandModel.YearsActive, bandModel.GenreId);
        _message = "Band saved successfully";
        bandModel.Name = "";
        bandModel.Origin= "";
        bandModel.YearsActive = "";
        bandModel.GenreId = _genresAndIds[0].GenreId;
    }

}
