@page "/bands"
@using MusicAlbumsShop.Shared.DTOs
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject NavigationManager Navigation

<PageTitle>Bands</PageTitle>

<h1>
    Bands
    <button class="btn btn-primary" @onclick="NavigateToAddBand"><i class="bi bi-plus-lg"></i></button>
</h1>

<section class="p-2 border shadow">
    @foreach (var band in _bands)
    {
        <div class="row">
            <div class="col-auto align-middle">
                <button class="btn btn-primary btn-sm" @onclick=@(() => EditBand(band.BandId)) ><i class="bi bi-pen"></i></button>
                <button class="btn btn-primary btn-sm" @onclick="@(() => DeleteBand(band.BandId))"><i class="bi bi-trash"></i></button>
            </div>
            <div class="col-auto align-middle">
                <span class="align-middle">@band.BandId</span>
            </div>
            <div class="col align-middle">
                <span class="align-middle">@band.Name</span>
            </div>
        </div>

    }
</section>


@code {

    private ApiClientService _apiClientService = new ApiClientService();
    private BandWithName[]? _bands = [];

    protected override void OnInitialized()
    {
        GetBands();
    }

    private async void GetBands()
    {
        _bands = await _apiClientService.GetBands();
        StateHasChanged();
    }
    private void NavigateToAddBand()
    {
        Navigation.NavigateTo("bands/addband");
    }

    private void DeleteBand(int bandId)
    {
        _apiClientService.DeleteBand(bandId);
        _bands = _bands?.Where(b => b.BandId != bandId).ToArray();
    }
    private async void EditBand(int bandId)
    {
        var band = await _apiClientService.GetBandDetails(bandId);
        Navigation.NavigateTo($"bands/editband/{band.Name}/{band.Origin}/{band.YearsActive}/{band.GenreName}");
    }
}
